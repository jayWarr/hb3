# Generated by Django 3.1.2 on 2020-10-12 20:19

import django.db.models.deletion
import django.utils.timezone
import django_userforeignkey.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collection', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('poem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collection.poem', verbose_name='poem')),
            ],
            options={
                'ordering': ('publication', 'poem'),
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='Publisher')),
                ('url', models.URLField(blank=True, verbose_name='url')),
                ('access', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', editable=False, help_text='Publisherp access - default is public, alternative is private', max_length=7, verbose_name='access')),
                ('country', models.CharField(choices=[('ARG', 'Argentina'), ('AUS', 'Australia'), ('BEL', 'Belgium'), ('CAN', 'Canada'), ('DNK', 'Denmark'), ('FIN', 'Finland'), ('FRA', 'France'), ('DEU', 'Gernmany'), ('GGY', 'Gurnesey'), ('GRC', 'Greece'), ('HKG', 'Hong Kong'), ('HUN', 'Hungary'), ('ISL', 'Iceland'), ('IND', 'India'), ('IRL', 'Ireland'), ('ITA', 'Italy'), ('JPN', 'Japan'), ('JEY', 'Jersey'), ('NLD', 'Netherlands'), ('NZL', 'New Zealand'), ('NOR', 'Norway'), ('POL', 'Poland'), ('ESP', 'Spain'), ('ZAP', 'South Africa'), ('SWE', 'Sweden'), ('CHE', 'Switzerland'), ('GBR', 'UK'), ('USA', 'USA')], default='GBR', max_length=3, verbose_name='country')),
                ('poet', django_userforeignkey.models.fields.UserForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='Publication')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Anthology'), (2, 'Book'), (3, 'Chapbook'), (4, 'Pamphlet'), (5, 'Website'), (6, 'Project')], verbose_name='type')),
                ('publishedOn', models.DateField(default=django.utils.timezone.now, verbose_name='published on')),
                ('contents', models.ManyToManyField(through='publishing.Content', to='collection.Poem')),
                ('poet', django_userforeignkey.models.fields.UserForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.publisher', verbose_name='publisher')),
            ],
            options={
                'ordering': ('name', 'type', 'publisher'),
            },
        ),
        migrations.AddField(
            model_name='content',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.publication', verbose_name='publication'),
        ),
        migrations.AlterUniqueTogether(
            name='content',
            unique_together={('publication', 'poem')},
        ),
    ]
