# Generated by Django 3.2.4 on 2021-07-06 11:07

import ckeditor.fields
import collection.models
import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_userforeignkey.models.fields
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('collection', '0006_auto_20210511_1137'),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(blank=True, choices=[('_wip_', 'WIP'), ('_vrn_', 'version')], max_length=5, null=True, verbose_name='type')),
                ('subtype', models.CharField(blank=True, choices=[('_fin_', 'finished'), ('critq', 'Critique'), ('draft', 'Draft'), ('image', 'Image'), ('jtngs', 'Jottings'), ('link', 'Link'), ('list', 'List'), ('rcdng', 'Recording'), ('sorce', 'Source'), ('refrn', 'Reference'), ('video', 'Video')], max_length=5, null=True, verbose_name='subType')),
                ('topic', models.CharField(blank=True, max_length=120, null=True, verbose_name='topic')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='text')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='link',
            name='name',
        ),
        migrations.RemoveField(
            model_name='poem',
            name='sd',
        ),
        migrations.RemoveField(
            model_name='poem',
            name='tag',
        ),
        migrations.AddField(
            model_name='poem',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='Comma delimited identifying words or phrases', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='upload',
            name='logo',
            field=models.ImageField(blank=True, default='', help_text='Must be an image file with less than 128w x 128h px diemensionss & less than 40KB size', max_length=150, upload_to=collection.models.user_directory_path, validators=[core.validators.uploadImageFileValidator], verbose_name='Personal logo'),
        ),
        migrations.AddField(
            model_name='upload',
            name='type',
            field=models.SmallIntegerField(choices=[(0, 'titles'), (1, 'logo')], default=0, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='link',
            name='type',
            field=models.CharField(choices=[('critq', 'Critique'), ('docmt', 'Document'), ('image', 'Image'), ('list', 'List'), ('rcdng', 'Recording'), ('refrn', 'Reference'), ('video', 'Video')], default='docmt', max_length=5, verbose_name='type'),
        ),
        migrations.AlterField(
            model_name='link',
            name='url',
            field=models.URLField(default='http://bbc.co.uk', verbose_name='url'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='poem',
            name='create',
            field=models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Set to Yes to have a new, current WIP poem note automatically created. Leave as NO if registering an alraqdy exiting poem.', verbose_name='Create'),
        ),
        migrations.AlterField(
            model_name='poem',
            name='mu',
            field=models.BooleanField(choices=[(True, 'Multiple'), (False, 'Single')], default=False, help_text='Defaults to profile setting', verbose_name='Multiple use'),
        ),
        migrations.AlterField(
            model_name='poem',
            name='title',
            field=models.CharField(help_text='Must be unique', max_length=100, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='poem',
            name='wip',
            field=models.BooleanField(default=False, help_text='Set True will be automatically excluded as an ESP candidate', verbose_name='WIP'),
        ),
        migrations.AlterField(
            model_name='upload',
            name='description',
            field=models.CharField(max_length=80, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='upload',
            name='document',
            field=models.FileField(blank=True, default='', help_text='Must be a hummingbird utility produced text file less than 1MB size', max_length=150, upload_to=collection.models.user_directory_path, validators=[core.validators.uploadTextFileValidator], verbose_name='Titles document'),
        ),
        migrations.DeleteModel(
            name='Journal',
        ),
        migrations.AddField(
            model_name='note',
            name='poem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collection.poem', verbose_name='poem'),
        ),
        migrations.AddField(
            model_name='note',
            name='poet',
            field=django_userforeignkey.models.fields.UserForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
